version: '3.8'

services:
  # Next.js Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - TURSO_CONNECTION_URL=${TURSO_CONNECTION_URL}
      - TURSO_AUTH_TOKEN=${TURSO_AUTH_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - S3_BUCKET=${S3_BUCKET:-classlens-documents}
      - S3_REGION=${S3_REGION:-us-east-1}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - minio
      - qdrant
    networks:
      - classlens-network

  # Vector Database (Qdrant)
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - classlens-network

  # Local Object Storage (MinIO - S3 compatible)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-storage:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    command: server /data --console-address ":9001"
    networks:
      - classlens-network

  # Worker for async document processing (Optional - requires implementation)
  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.worker
  #   environment:
  #     - NODE_ENV=production
  #     - TURSO_CONNECTION_URL=${TURSO_CONNECTION_URL}
  #     - TURSO_AUTH_TOKEN=${TURSO_AUTH_TOKEN}
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #     - REDIS_URL=redis://redis:6379
  #   depends_on:
  #     - redis
  #     - qdrant
  #     - minio
  #   networks:
  #     - classlens-network

  # Redis for worker queue (Optional)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - classlens-network

networks:
  classlens-network:
    driver: bridge

volumes:
  qdrant-storage:
  minio-storage:
  # redis-data: